name: CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 flake8-docstrings flake8-bugbear

    - name: Lint with flake8
      run: |
        flake8 . \
          --max-line-length=100 \
          --exclude=.git,__pycache__,build,dist,venv \
          --per-file-ignores="__init__.py:F401,conftest.py:F401,manage.py:F401" \
          --ignore=E203,W503,D100,D101,D102,D103,D104,D105,D106 \
          --max-complexity=10

    - name: Run tests
      run: pytest

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node 20
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'

    - name: Install dependencies
      run: |
        npm install
        npm ci

    - name: Lint
      run: |
        npm run lint || true  # Temporarily allow linting to pass even with warnings

    - name: Run tests
      run: npm test

  build_images:
    runs-on: ubuntu-latest
    needs: [backend, frontend]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build images
      run: |
        docker compose build --parallel
